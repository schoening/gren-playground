module View exposing ( view )

import Html as H
import Html.Attributes as HA
import Html.Events as HE
import Message exposing (..)
import Model exposing (..)


view : Model -> H.Html Msg
view model =
    H.div
        [ HA.class "w-screen h-screen"
        , HA.class "flex"
        , HA.class "bg-slate-500"
        ]
        [ viewSidebar model
        , viewRight model
        ]


viewRight model =
    H.div
        [ HA.class "w-full flex-1"
        , HA.class "flex flex-col"
        ]
        [ viewRightTopBar model
        , H.div
            [ HA.class "w-full"
            , HA.class "flex-1 flex flex-row"
            ]
            [ viewCodeEditor model
            , viewIframe model
            ]
        ]


viewRightTopBar model =
    H.div
        [ HA.class "w-full h-8"
        , HA.class "bg-slate-600"
        ]
        [ H.button
            [ HA.class "h-8"
            , HA.class "text-white"
            , HA.class "p-2"
            , HA.class "bg-orange-500"
            , HA.class "flex justify-center items-center"
            , HE.onClick OnSaveButtonClicked
            ]
            [ H.text "Save"
            ]
        ]


viewCodeEditor : Model -> H.Html Msg
viewCodeEditor model =
    H.div
        [ HA.class "flex-1"
        , HA.class "bg-slate-500"
        , HA.class "w-full"
        , HE.onInput OnCodeEditorChanged
        ]
        (case model.selectedFile of
            Just file ->
                [ H.textarea
                    [ HA.class "whitespace-pre-wrap"
                    , HA.class "w-full h-full"
                    ]
                    [ H.text file.content
                    ]
                ]

            Nothing ->
                [ H.text "No file selected"
                ]
        )


viewIframe : Model -> H.Html Msg
viewIframe model =
    H.div
        [ HA.class "flex-1"
        , HA.class "w-full"
        , HA.class "border-2 border-red-500"
        , HA.class "bg-white"
        ]
        (case model.folderName of
            FolderName folderName ->
                [ H.iframe
                    [ HA.class "w-full h-full"
                    , HA.src ("/iframe/" ++ folderName ++ ("?" ++ String.fromInt model.reloadIframeHack))
                    ]
                    []
                ]

            New ->
                [ H.div
                    [ HA.class "w-full h-full"
                    ]
                    []
                ]
        )


viewSidebar : Model -> H.Html Msg
viewSidebar model =
    H.div
        [ HA.class "h-screen"
        , HA.class "bg-slate-600"
        , HA.style "width" (String.fromInt model.sidebarWidth ++ "px")
        ]
        [ viewSideBarTopPanel model
        , viewSidebarFiles model
        ]


viewSideBarTopPanel : Model -> H.Html Msg
viewSideBarTopPanel model =
    H.div
        [ HA.class "w-full h-8"
        , HA.class "bg-green-500"
        ]
        []


viewSidebarFiles : Model -> H.Html Msg
viewSidebarFiles model =
    H.div
        [ HA.class "h-full"
        , HA.class "bg-blue-600"
        , HA.style "width" (String.fromInt model.sidebarWidth ++ "px")
        ]
        (Array.map viewSidebarFile model.files)


viewSidebarFile : File -> H.Html Msg
viewSidebarFile file =
    H.button
        [ HA.class "h-8"
        , HA.class "bg-blue-700"
        , HA.class "w-full"
        , HE.onClick (OnSidebarFileClicked file)
        ]
        [ H.text file.name
        ]
